package sn.sonatel.dsi.ins.ftsirc.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AdresseAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresseAllPropertiesEquals(Adresse expected, Adresse actual) {
        assertAdresseAutoGeneratedPropertiesEquals(expected, actual);
        assertAdresseAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresseAllUpdatablePropertiesEquals(Adresse expected, Adresse actual) {
        assertAdresseUpdatableFieldsEquals(expected, actual);
        assertAdresseUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresseAutoGeneratedPropertiesEquals(Adresse expected, Adresse actual) {
        assertThat(expected)
            .as("Verify Adresse auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresseUpdatableFieldsEquals(Adresse expected, Adresse actual) {
        assertThat(expected)
            .as("Verify Adresse relevant properties")
            .satisfies(e -> assertThat(e.getRegion()).as("check region").isEqualTo(actual.getRegion()))
            .satisfies(e -> assertThat(e.getVille()).as("check ville").isEqualTo(actual.getVille()))
            .satisfies(e -> assertThat(e.getCommune()).as("check commune").isEqualTo(actual.getCommune()))
            .satisfies(e -> assertThat(e.getLatitude()).as("check latitude").isEqualTo(actual.getLatitude()))
            .satisfies(e -> assertThat(e.getLongitude()).as("check longitude").isEqualTo(actual.getLongitude()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAdresseUpdatableRelationshipsEquals(Adresse expected, Adresse actual) {}
}
