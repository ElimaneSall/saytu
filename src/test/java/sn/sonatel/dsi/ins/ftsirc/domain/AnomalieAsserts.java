package sn.sonatel.dsi.ins.ftsirc.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AnomalieAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnomalieAllPropertiesEquals(Anomalie expected, Anomalie actual) {
        assertAnomalieAutoGeneratedPropertiesEquals(expected, actual);
        assertAnomalieAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnomalieAllUpdatablePropertiesEquals(Anomalie expected, Anomalie actual) {
        assertAnomalieUpdatableFieldsEquals(expected, actual);
        assertAnomalieUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnomalieAutoGeneratedPropertiesEquals(Anomalie expected, Anomalie actual) {
        assertThat(expected)
            .as("Verify Anomalie auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnomalieUpdatableFieldsEquals(Anomalie expected, Anomalie actual) {
        assertThat(expected)
            .as("Verify Anomalie relevant properties")
            .satisfies(e -> assertThat(e.getLibelle()).as("check libelle").isEqualTo(actual.getLibelle()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAnomalieUpdatableRelationshipsEquals(Anomalie expected, Anomalie actual) {
        assertThat(expected)
            .as("Verify Anomalie relationships")
            .satisfies(e -> assertThat(e.getDiagnostics()).as("check diagnostics").isEqualTo(actual.getDiagnostics()));
    }
}
