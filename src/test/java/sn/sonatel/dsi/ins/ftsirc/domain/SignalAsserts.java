package sn.sonatel.dsi.ins.ftsirc.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SignalAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSignalAllPropertiesEquals(Signal expected, Signal actual) {
        assertSignalAutoGeneratedPropertiesEquals(expected, actual);
        assertSignalAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSignalAllUpdatablePropertiesEquals(Signal expected, Signal actual) {
        assertSignalUpdatableFieldsEquals(expected, actual);
        assertSignalUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSignalAutoGeneratedPropertiesEquals(Signal expected, Signal actual) {
        assertThat(expected)
            .as("Verify Signal auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSignalUpdatableFieldsEquals(Signal expected, Signal actual) {
        assertThat(expected)
            .as("Verify Signal relevant properties")
            .satisfies(e -> assertThat(e.getLibelle()).as("check libelle").isEqualTo(actual.getLibelle()))
            .satisfies(e -> assertThat(e.getSeuilMin()).as("check seuilMin").isEqualTo(actual.getSeuilMin()))
            .satisfies(e -> assertThat(e.getSeuilMax()).as("check seuilMax").isEqualTo(actual.getSeuilMax()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSignalUpdatableRelationshipsEquals(Signal expected, Signal actual) {}
}
