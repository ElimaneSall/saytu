package sn.sonatel.dsi.ins.ftsirc.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OLTAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOLTAllPropertiesEquals(OLT expected, OLT actual) {
        assertOLTAutoGeneratedPropertiesEquals(expected, actual);
        assertOLTAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOLTAllUpdatablePropertiesEquals(OLT expected, OLT actual) {
        assertOLTUpdatableFieldsEquals(expected, actual);
        assertOLTUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOLTAutoGeneratedPropertiesEquals(OLT expected, OLT actual) {
        assertThat(expected)
            .as("Verify OLT auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOLTUpdatableFieldsEquals(OLT expected, OLT actual) {
        assertThat(expected)
            .as("Verify OLT relevant properties")
            .satisfies(e -> assertThat(e.getNom()).as("check nom").isEqualTo(actual.getNom()))
            .satisfies(e -> assertThat(e.getIp()).as("check ip").isEqualTo(actual.getIp()))
            .satisfies(e -> assertThat(e.getVendeur()).as("check vendeur").isEqualTo(actual.getVendeur()))
            .satisfies(e -> assertThat(e.getEtat()).as("check etat").isEqualTo(actual.getEtat()))
            .satisfies(e -> assertThat(e.getCreatedAt()).as("check createdAt").isEqualTo(actual.getCreatedAt()))
            .satisfies(e -> assertThat(e.getUpdatedAt()).as("check updatedAt").isEqualTo(actual.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOLTUpdatableRelationshipsEquals(OLT expected, OLT actual) {
        assertThat(expected)
            .as("Verify OLT relationships")
            .satisfies(e -> assertThat(e.getAdresse()).as("check adresse").isEqualTo(actual.getAdresse()));
    }
}
